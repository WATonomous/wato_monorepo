version: "3.8"

services:
  radar_object_detection:
    build:
      context: ..
      dockerfile: docker/perception/radar_object_detection/radar_object_detection.Dockerfile
      cache_from:
        - "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:build_${TAG}"
        - "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:build_main"
      target: deploy
    image: "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:${TAG}"
    command: /bin/bash -c "ros2 launch radar_object_detection radar_object_detection.launch.py"

  camera_object_detection:
    build:
      context: ..
      dockerfile: docker/perception/camera_object_detection/camera_object_detection.Dockerfile
      cache_from:
        - "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:build_${TAG}"
        - "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:build_main"
      target: deploy
    image: "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:${TAG}"
    shm_size: 8G
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: /bin/bash -c "ros2 launch camera_object_detection eve_launch.py"
    volumes:
      - /mnt/wato-drive2/perception_models/yolov8m.pt:/perception_models/yolov8m.pt
      - /mnt/wato-drive2/perception_models/traffic_light.pt:/perception_models/traffic_light.pt
      - /mnt/wato-drive2/perception_models/traffic_signs_v0.pt:/perception_models/traffic_signs_v1.pt

  lidar_object_detection:
    build:
      context: ..
      dockerfile: docker/perception/lidar_object_detection/lidar_object_detection.Dockerfile
      cache_from:
        - "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:build_${TAG}"
        - "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:build_main"
      target: deploy
    image: "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch lidar_object_detection lidar_object_detection.launch.py"

  semantic_segmentation:
    build:
      context: ..
      dockerfile: docker/perception/semantic_segmentation/semantic_segmentation.Dockerfile
      cache_from:
        - "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:build_${TAG}"
        - "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:build_main"
      target: deploy
    image: "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch semantic_segmentation semantic_segmentation.launch.py"

  lane_detection:
    build:
      context: ..
      dockerfile: docker/perception/lane_detection/lane_detection.Dockerfile
      cache_from:
        - "${PERCEPTION_LANE_DETECTION_IMAGE}:build_${TAG}"
        - "${PERCEPTION_LANE_DETECTION_IMAGE}:build_main"
      target: deploy
    image: "${PERCEPTION_LANE_DETECTION_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch lane_detection lane_detection.launch.py"

  tracking:
    build:
      context: ..
      dockerfile: docker/perception/tracking/tracking.Dockerfile
      cache_from:
        - "${PERCEPTION_TRACKING_IMAGE}:build_${TAG}"
        - "${PERCEPTION_TRACKING_IMAGE}:build_main"
      target: deploy
    image: "${PERCEPTION_TRACKING_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch tracking tracking.launch.py"
    
  depth_estimation:
    build:
      context: ..
      dockerfile: docker/perception/depth_estimation/depth_estimation.Dockerfile
      cache_from:
        - "${PERCEPTION_DEPTH_ESTIMATION_IMAGE}:build_${TAG}"
        - "${PERCEPTION_DEPTH_ESTIMATION_IMAGE}:build_main"
      target: deploy
    image: "${PERCEPTION_DEPTH_ESTIMATION_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch depth_estimation eve.launch.py"
