version: "3.8"

services:
  # radar_object_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/radar_object_detection/radar_object_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:${TAG}"
  #       - "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:main"
  #     target: deploy
  #   image: "${PERCEPTION_RADAR_OBJECT_DETECTION_IMAGE:?}:${TAG}"
  #   command: /bin/bash -c "ros2 launch radar_object_detection radar_object_detection.launch.py"

  # camera_object_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/camera_object_detection/camera_object_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:${TAG}"
  #       - "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:main"
  #     target: deploy
  #   image: "${PERCEPTION_CAMERA_OBJECT_DETECTION_IMAGE:?}:${TAG}"
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [ gpu ]
  #   command: /bin/bash -c "ros2 launch camera_object_detection nuscenes_launch.py"
  #   volumes:
  #     - /mnt/wato-drive2/perception_models/yolov8s.pt:/perception_models/yolov8s.pt

  # lidar_object_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/lidar_object_detection/lidar_object_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:${TAG}"
  #       - "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:main"
  #     target: deploy
  #   image: "${PERCEPTION_LIDAR_OBJECT_DETECTION_IMAGE}:${TAG}"
  #   command: /bin/bash -c "ros2 launch lidar_object_detection lidar_object_detection.launch.py"
  # traffic_light_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/traffic_light_detection/traffic_light_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_TRAFFIC_LIGHT_DETECTION_IMAGE}:${TAG}"
  #       - "${PERCEPTION_TRAFFIC_LIGHT_DETECTION_IMAGE}:main"
  #     target: deploy
  #   image: "${PERCEPTION_TRAFFIC_LIGHT_DETECTION_IMAGE}:${TAG}"
  #   command: /bin/bash -c "ros2 launch traffic_light_detection traffic_light_detection.launch.py"

  # traffic_sign_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/traffic_sign_detection/traffic_sign_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_TRAFFIC_SIGN_DETECTION_IMAGE}:${TAG}"
  #       - "${PERCEPTION_TRAFFIC_SIGN_DETECTION_IMAGE}:main"
  #     target: deploy
  #   image: "${PERCEPTION_TRAFFIC_SIGN_DETECTION_IMAGE}:${TAG}"
  #   command: /bin/bash -c "ros2 launch traffic_sign_detection traffic_sign_detection.launch.py"

  semantic_segmentation:
    build:
      context: ..
      dockerfile: docker/perception/semantic_segmentation/semantic_segmentation.Dockerfile
      cache_from:
        - "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:${TAG}"
        - "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:main"
      # target: deploy
    image: "${PERCEPTION_SEMANTIC_SEGMENTATION_IMAGE}:${TAG}"
    command: /bin/bash -c "ros2 launch semantic_segmentation semantic_segmentation.launch.py"
    volumes: 
      - /mnt/wato-drive2/perception-weights/semantic_segmentation:/perception_models/semantic_segmentation
    # add gpus all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1

  # lane_detection:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/lane_detection/lane_detection.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_LANE_DETECTION_IMAGE}:${TAG}"
  #       - "${PERCEPTION_LANE_DETECTION_IMAGE}:main"
  #     target: deploy
  #   image: "${PERCEPTION_LANE_DETECTION_IMAGE}:${TAG}"
  #   command: /bin/bash -c "ros2 launch lane_detection lane_detection.launch.py"

  # tracking:
  #   build:
  #     context: ..
  #     dockerfile: docker/perception/tracking/tracking.Dockerfile
  #     cache_from:
  #       - "${PERCEPTION_TRACKING_IMAGE}:${TAG}"
  #       - "${PERCEPTION_TRACKING_IMAGE}:main"
  #     target: deploy
  #   image: "${PERCEPTION_TRACKING_IMAGE}:${TAG}"
  #   command: /bin/bash -c "ros2 launch tracking tracking.launch.py"
