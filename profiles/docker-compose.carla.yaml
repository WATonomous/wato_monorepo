version: "3.8"
services:
  carla_server:
    build:
      context: ..
      dockerfile: docker/carla_server/Dockerfile
      cache_from:
        - "${CARLA_SERVER_IMAGE:?}:latest"
      args:
        - CARLA_VERSION=0.9.13
    image: "${CARLA_SERVER_IMAGE:?}:latest"
    environment:
      - DISPLAY=1
    container_name: ${COMPOSE_PROJECT_NAME:?}_carla
    runtime: nvidia
    ports:
      - 2000:2000
    command: /bin/bash -c "./CarlaUE4.sh -nosound -carla-server -RenderOffscreen -world-port=2000"

  carla_ros_bridge:
    build:
      context: ..
      dockerfile: docker/carla_ros_bridge/Dockerfile
      cache_from: 
        - "${CARLA_ROS2_BRIDGE_IMAGE:?}-${CACHE_FROM_TAG}"
        - "${CARLA_ROS2_BRIDGE_IMAGE:?}-develop"
      args:
        - CARLA_VERSION=0.9.13
    environment:
      - CARLA_HOSTNAME=${COMPOSE_PROJECT_NAME:?}_carla
      - USE_ACKERMANN_CONTROL=False
    image: "${CARLA_ROS2_BRIDGE_IMAGE:?}-${TAG}" 
    user: ${FIXUID:?}:${FIXGID:?}
    container_name: ${COMPOSE_PROJECT_NAME:?}_carla_ros_bridge
    restart: always
    depends_on:
      - carla_server
    
  carla_notebooks:
    build:
      context: ..
      dockerfile: docker/simulation/carla_notebooks.Dockerfile
      args:
        - CARLA_VERSION=0.9.13
    image: python_api_test
    user: root:root
    ports:
      - 8888:8888
    environment:
      - CLIENT_NAME=${COMPOSE_PROJECT_NAME:?}_carla
    container_name: ${COMPOSE_PROJECT_NAME:?}_carla_notebooks
    command: jupyter notebook --ip 0.0.0.0 --port 8888 --allow-root --no-browser --NotebookApp.token='' --NotebookApp.password=''
  
  # carla_manual_control:
  #   build:
  #     context: ..
  #     dockerfile: docker/simulation/manual_control.Dockerfile
  #     cache_from:
  #       # - "${INFRASTRUCTURE_VIS_TOOLS_VNC_IMAGE:?}-${CACHE_FROM_TAG}"
  #       - "${INFRASTRUCTURE_VIS_TOOLS_VNC_IMAGE:?}-simulation"
  #       - "${INFRASTRUCTURE_VIS_TOOLS_VNC_IMAGE:?}-develop"
  #     args:
  #       - CARLA_VERSION=0.9.13
  #       - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
  #   image: carla_manual_control
  #   user: ${FIXUID:?}:${FIXGID:?}
  #   ports:
  #     - "6600:5900"
    # environment:
    #   - VNC_PORT=${GUI_TOOLS_VNC_PORT:?}
    
  camera_compression:
    build:
      context: ..
      dockerfile: docker/simulation/camera_compression.Dockerfile
      cache_from:
        - "${SIMULATION_CAMERA_COMPRESSION_IMAGE:?}-${CACHE_FROM_TAG}"
        - "${SIMULATION_CAMERA_COMPRESSION_IMAGE:?}-develop"
    image: "${SIMULATION_CAMERA_COMPRESSION_IMAGE:?}-${TAG}"
    user: ${FIXUID:?}:${FIXGID:?}
    volumes:
      - ../src/simulation/camera_compression:/home/docker/ament_ws/src/camera_compression
