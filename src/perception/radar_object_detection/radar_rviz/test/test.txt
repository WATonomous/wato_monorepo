  
## To be included in the main function of the node 

auto test_node = std::make_shared<RadarRvizProcessorNode>();
rclcpp::Rate loop_rate(10);
while (rclcpp::ok()) {
  auto msg = std::make_shared<radar_msgs::msg::RadarPacket>();
  radar_msgs::msg::RadarDetection msg_detection;

  msg->event_id = 3;
  msg->timestamp = 2;
  msg_detection.pos_x = std::rand() % 15;
  msg_detection.pos_y = std::rand() % 15;
  msg_detection.pos_z = std::rand() % 15;
  msg_detection.rcs0 = std::rand() % 15;
  msg->detections.push_back(msg_detection);

  RCLCPP_INFO(test_node->get_logger(), "%s\n", "Sending data to callback.");
  test_node->process_radar_data_callback(msg);
  rclcpp::spin_some(test_node);
  loop_rate.sleep();
}