name: Build and Test Monorepo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    name: Setup environment
    runs-on: ubuntu-latest

    outputs:
      docker_matrix: ${{ steps.docker-environment.outputs.docker_matrix }}
      registry: ${{ steps.docker-environment.outputs.registry }}
      repository: ${{ steps.docker-environment.outputs.repository }}
      source_branch: ${{ steps.github-environment.outputs.source_branch }}
      target_branch: ${{ steps.github-environment.outputs.target_branch }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Watod Environment
        run: ./watod_scripts/watod-setup-env.sh
        shell: bash

      - name: Generate Docker Environment
        id: docker-environment
        uses: "./.github/templates/docker_context"

      - name: Generate GitHub Environment
        id: github-environment
        uses: "./.github/templates/github_context"

  build-and-unittest:
    name: Build Image and Run Unit Testing Suite
    runs-on: ubuntu-latest
    needs: setup-environment

    env:
      DOCKER_REGISTRY: ${{ needs.setup-environment.outputs.registry }}
      DOCKER_REPOSITORY: ${{ needs.setup-environment.outputs.repository }}
      SOURCE_BRANCH: ${{ needs.setup-environment.outputs.source_branch }}
      TARGET_BRANCH: ${{ needs.setup-environment.outputs.target_branch }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup-environment.outputs.docker_matrix) }}

    concurrency:
      group: ${{ matrix.service }}-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Construct Registry URL
        id: construct-registry-url
        run: |
          echo "url=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/${{ matrix.module }}/${{ matrix.service }}" \
          >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PWD }}

      - name: Prepare Image Source
        if: ${{ ! matrix.module == "infrastructure" }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/${{ matrix.module }}/${{ matrix.service }}/${{ matrix.service }}.Dockerfile
          push: true
          tags: |
            ${{ steps.construct-registry-url.outputs.url }}:source_${{ env.SOURCE_BRANCH }}
          cache-from: |
            ${{ steps.construct-registry-url.outputs.url }}:source_${{ env.SOURCE_BRANCH }}
            ${{ steps.construct-registry-url.outputs.url }}:source_${{ env.TARGET_BRANCH }}
          cache-to: type=inline
          builder: ${{ steps.buildx.outputs.name }}
          target: source

      - name: Build Image with Source
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/${{ matrix.module }}/${{ matrix.service }}/${{ matrix.service }}.Dockerfile
          push: true
          tags: |
            ${{ steps.construct-registry-url.outputs.url }}:build_${{ env.SOURCE_BRANCH }}
          cache-from: |
            ${{ steps.construct-registry-url.outputs.url }}:source_${{ env.SOURCE_BRANCH }}
            ${{ steps.construct-registry-url.outputs.url }}:build_${{ env.SOURCE_BRANCH }}
            ${{ steps.construct-registry-url.outputs.url }}:build_${{ env.TARGET_BRANCH }}
          cache-to: type=inline
          builder: ${{ steps.buildx.outputs.name }}
          target: build

      - name: Build Prod Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/${{ matrix.module }}/${{ matrix.service }}/${{ matrix.service }}.Dockerfile
          push: true
          tags: |
            ${{ steps.construct-registry-url.outputs.url }}:${{ env.SOURCE_BRANCH }}
          cache-from: |
            ${{ steps.construct-registry-url.outputs.url }}:build_${{ env.SOURCE_BRANCH }}
            ${{ steps.construct-registry-url.outputs.url }}:${{ env.SOURCE_BRANCH }}
            ${{ steps.construct-registry-url.outputs.url }}:${{ env.TARGET_BRANCH }}
          cache-to: type=inline
          builder: ${{ steps.buildx.outputs.name }}
          target: prod

      - name: Run testing suite
        uses: "./.github/templates/test"
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          BUILDKIT_INLINE_CACHE: 1
        with:
          module: ${{ matrix.module }}
          service: ${{ matrix.service }}
          source_branch: ${{ env.SOURCE_BRANCH }}
